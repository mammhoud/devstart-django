networks:
  webserver:
    driver: bridge
    name: webserver
    external: false
volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_redis_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: local_django
    container_name: local_django
    environment:
      - DJANGO_READ_DOT_ENV_FILE=False
      - USE_DOCKER=yes
    depends_on:
      - postgres
      - redis
      - mailpit
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/
        # Rebuild the image if dependencies change by checking uv.lock
        - action: rebuild
          path: ./uv.lock
    command: /scripts/start
    networks:
      - webserver

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: production_postgres
    container_name: local_postgres
    networks:
      - webserver
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"

  mailpit:
    image: docker.io/axllent/mailpit:latest
    container_name: local_mailpit
    ports:
      - "8025:8025"

  redis:
    image: docker.io/redis:6
    container_name: local_redis
    volumes:
      - local_redis_data:/data
    networks:
      - webserver
    ports:
      - "6379:6379"
  celeryworker:
    <<: *django
    image: local_celeryworker
    container_name: local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /scripts/start-celeryworker
    networks:
      - webserver

  celerybeat:
    <<: *django
    image: local_celerybeat
    container_name: local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /scripts/start-celerybeat
    networks:
      - webserver

  flower:
    <<: *django
    image: local_flower
    container_name: local_flower
    ports:
      - '5555:5555'
    command: /scripts/start-flower
    networks:
      - webserver

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: local_node
    container_name: local_node
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - '3000:3000'
    networks:
      - webserver
